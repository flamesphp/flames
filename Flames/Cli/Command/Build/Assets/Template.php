<?php

namespace Flames\Cli\Command\Build\Assets;

use Flames;

/**
 * @internal
 */
class Template
{
    protected static array $defaultFiles = [
        Flames\Template::class,
        Flames\Template\Compiler::class,
        Flames\Template\Environment::class,
        Flames\Template\ExpressionParser::class,
        Flames\Template\ExtensionSet::class,
        Flames\Template\FileExtensionEscapingStrategy::class,
        Flames\Template\Lexer::class,
        Flames\Template\Markup::class,
        Flames\Template\NodeTraverser::class,
        Flames\Template\Parser::class,
        Flames\Template\Source::class,
        Flames\Template\Template::class,
        Flames\Template\TemplateFilter::class,
        Flames\Template\TemplateFunction::class,
        Flames\Template\TemplateTest::class,
        Flames\Template\TemplateWrapper::class,
        Flames\Template\Token::class,
        Flames\Template\TokenStream::class,
        Flames\Template\Attribute\YieldReady::class,
        Flames\Template\Cache\CacheInterface::class,
        Flames\Template\Cache\FilesystemCache::class,
        Flames\Template\Cache\NullCache::class,
        Flames\Template\Error\Error::class,
        Flames\Template\Error\LoaderError::class,
        Flames\Template\Error\RuntimeError::class,
        Flames\Template\Error\SyntaxError::class,
        Flames\Template\Extension\AbstractExtension::class,
        Flames\Template\Extension\CoreExtension::class,
        Flames\Template\Extension\DebugExtension::class,
        Flames\Template\Extension\EscaperExtension::class,
        Flames\Template\Extension\ExtensionInterface::class,
        Flames\Template\Extension\GlobalsInterface::class,
        Flames\Template\Extension\OptimizerExtension::class,
        Flames\Template\Extension\ProfilerExtension::class,
        Flames\Template\Extension\RuntimeExtensionInterface::class,
        Flames\Template\Extension\SandboxExtension::class,
        Flames\Template\Extension\StagingExtension::class,
        Flames\Template\Extension\StringLoaderExtension::class,
        Flames\Template\Extension\YieldNotReadyExtension::class,
        Flames\Template\Loader\ArrayLoader::class,
        Flames\Template\Loader\ChainLoader::class,
        Flames\Template\Loader\FilesystemLoader::class,
        Flames\Template\Loader\LoaderInterface::class,
        Flames\Template\Node\AutoEscapeNode::class,
        Flames\Template\Node\BlockNode::class,
        Flames\Template\Node\BlockReferenceNode::class,
        Flames\Template\Node\BodyNode::class,
        Flames\Template\Node\CaptureNode::class,
        Flames\Template\Node\CheckSecurityCallNode::class,
        Flames\Template\Node\CheckSecurityNode::class,
        Flames\Template\Node\CheckToStringNode::class,
        Flames\Template\Node\DeprecatedNode::class,
        Flames\Template\Node\DoNode::class,
        Flames\Template\Node\EmbedNode::class,
        Flames\Template\Node\ExportNode::class,
        Flames\Template\Node\FlushNode::class,
        Flames\Template\Node\ForLoopNode::class,
        Flames\Template\Node\ForNode::class,
        Flames\Template\Node\IfNode::class,
        Flames\Template\Node\ImportNode::class,
        Flames\Template\Node\IncludeNode::class,
        Flames\Template\Node\MacroNode::class,
        Flames\Template\Node\ModuleNode::class,
        Flames\Template\Node\Node::class,
        Flames\Template\Node\NodeCaptureInterface::class,
        Flames\Template\Node\NodeOutputInterface::class,
        Flames\Template\Node\PrintNode::class,
        Flames\Template\Node\SandboxNode::class,
        Flames\Template\Node\SetNode::class,
        Flames\Template\Node\TextNode::class,
        Flames\Template\Node\WithNode::class,
        Flames\Template\Node\Expression\AbstractExpression::class,
        Flames\Template\Node\Expression\ArrayExpression::class,
        Flames\Template\Node\Expression\ArrowFunctionExpression::class,
        Flames\Template\Node\Expression\AssignNameExpression::class,
        Flames\Template\Node\Expression\BlockReferenceExpression::class,
        Flames\Template\Node\Expression\CallExpression::class,
        Flames\Template\Node\Expression\ConditionalExpression::class,
        Flames\Template\Node\Expression\ConstantExpression::class,
        Flames\Template\Node\Expression\FilterExpression::class,
        Flames\Template\Node\Expression\FunctionExpression::class,
        Flames\Template\Node\Expression\GetAttrExpression::class,
        Flames\Template\Node\Expression\InlinePrint::class,
        Flames\Template\Node\Expression\MethodCallExpression::class,
        Flames\Template\Node\Expression\NameExpression::class,
        Flames\Template\Node\Expression\NullCoalesceExpression::class,
        Flames\Template\Node\Expression\ParentExpression::class,
        Flames\Template\Node\Expression\TempNameExpression::class,
        Flames\Template\Node\Expression\TestExpression::class,
        Flames\Template\Node\Expression\VariadicExpression::class,
        Flames\Template\Node\Expression\Binary\AbstractBinary::class,
        Flames\Template\Node\Expression\Binary\AddBinary::class,
        Flames\Template\Node\Expression\Binary\AndBinary::class,
        Flames\Template\Node\Expression\Binary\BitwiseAndBinary::class,
        Flames\Template\Node\Expression\Binary\BitwiseOrBinary::class,
        Flames\Template\Node\Expression\Binary\BitwiseXorBinary::class,
        Flames\Template\Node\Expression\Binary\ConcatBinary::class,
        Flames\Template\Node\Expression\Binary\DivBinary::class,
        Flames\Template\Node\Expression\Binary\AbstractBinary::class,
        Flames\Template\Node\Expression\Binary\EndsWithBinary::class,
        Flames\Template\Node\Expression\Binary\EqualBinary::class,
        Flames\Template\Node\Expression\Binary\FloorDivBinary::class,
        Flames\Template\Node\Expression\Binary\GreaterBinary::class,
        Flames\Template\Node\Expression\Binary\GreaterEqualBinary::class,
        Flames\Template\Node\Expression\Binary\HasEveryBinary::class,
        Flames\Template\Node\Expression\Binary\HasSomeBinary::class,
        Flames\Template\Node\Expression\Binary\InBinary::class,
        Flames\Template\Node\Expression\Binary\LessBinary::class,
        Flames\Template\Node\Expression\Binary\LessEqualBinary::class,
        Flames\Template\Node\Expression\Binary\MatchesBinary::class,
        Flames\Template\Node\Expression\Binary\ModBinary::class,
        Flames\Template\Node\Expression\Binary\MulBinary::class,
        Flames\Template\Node\Expression\Binary\NotEqualBinary::class,
        Flames\Template\Node\Expression\Binary\NotInBinary::class,
        Flames\Template\Node\Expression\Binary\OrBinary::class,
        Flames\Template\Node\Expression\Binary\PowerBinary::class,
        Flames\Template\Node\Expression\Binary\RangeBinary::class,
        Flames\Template\Node\Expression\Binary\SpaceshipBinary::class,
        Flames\Template\Node\Expression\Binary\OrBinary::class,
        Flames\Template\Node\Expression\Binary\StartsWithBinary::class,
        Flames\Template\Node\Expression\Binary\SubBinary::class,
        Flames\Template\Node\Expression\Filter\DefaultFilter::class,
        Flames\Template\Node\Expression\Test\ConstantTest::class,
        Flames\Template\Node\Expression\Test\DefinedTest::class,
        Flames\Template\Node\Expression\Test\DivisiblebyTest::class,
        Flames\Template\Node\Expression\Test\EvenTest::class,
        Flames\Template\Node\Expression\Test\NullTest::class,
        Flames\Template\Node\Expression\Test\OddTest::class,
        Flames\Template\Node\Expression\Test\SameasTest::class,
        Flames\Template\Node\Expression\Unary\AbstractUnary::class,
        Flames\Template\Node\Expression\Unary\NegUnary::class,
        Flames\Template\Node\Expression\Unary\NotUnary::class,
        Flames\Template\Node\Expression\Unary\PosUnary::class,
        Flames\Template\NodeVisitor\AbstractNodeVisitor::class,
        Flames\Template\NodeVisitor\EscaperNodeVisitor::class,
        Flames\Template\NodeVisitor\MacroAutoImportNodeVisitor::class,
        Flames\Template\NodeVisitor\NodeVisitorInterface::class,
        Flames\Template\NodeVisitor\OptimizerNodeVisitor::class,
        Flames\Template\NodeVisitor\SafeAnalysisNodeVisitor::class,
        Flames\Template\NodeVisitor\SandboxNodeVisitor::class,
        Flames\Template\NodeVisitor\YieldNotReadyNodeVisitor::class,
        Flames\Template\Profiler\Dumper\BaseDumper::class,
        Flames\Template\Profiler\Dumper\BlackfireDumper::class,
        Flames\Template\Profiler\Dumper\HtmlDumper::class,
        Flames\Template\Profiler\Dumper\TextDumper::class,
        Flames\Template\Profiler\Node\EnterProfileNode::class,
        Flames\Template\Profiler\Node\LeaveProfileNode::class,
        Flames\Template\Profiler\NodeVisitor\ProfilerNodeVisitor::class,
        Flames\Template\Profiler\Profile::class,
        Flames\Template\RuntimeLoader\ContainerRuntimeLoader::class,
        Flames\Template\RuntimeLoader\FactoryRuntimeLoader::class,
        Flames\Template\RuntimeLoader\RuntimeLoaderInterface::class,
        Flames\Template\Sandbox\SecurityError::class,
        Flames\Template\Sandbox\SecurityNotAllowedFilterError::class,
        Flames\Template\Sandbox\SecurityNotAllowedFunctionError::class,
        Flames\Template\Sandbox\SecurityNotAllowedMethodError::class,
        Flames\Template\Sandbox\SecurityNotAllowedPropertyError::class,
        Flames\Template\Sandbox\SecurityNotAllowedTagError::class,
        Flames\Template\Sandbox\SecurityPolicy::class,
        Flames\Template\Sandbox\SecurityPolicyInterface::class,
        Flames\Template\Sandbox\SourcePolicyInterface::class,
        Flames\Template\Source\PostProcess::class,
        Flames\Template\TokenParser\AbstractTokenParser::class,
        Flames\Template\TokenParser\ApplyTokenParser::class,
        Flames\Template\TokenParser\AutoEscapeTokenParser::class,
        Flames\Template\TokenParser\BlockTokenParser::class,
        Flames\Template\TokenParser\DeprecatedTokenParser::class,
        Flames\Template\TokenParser\DoTokenParser::class,
        Flames\Template\TokenParser\EmbedTokenParser::class,
        Flames\Template\TokenParser\ExportTokenParser::class,
        Flames\Template\TokenParser\ExtendsTokenParser::class,
        Flames\Template\TokenParser\FlushTokenParser::class,
        Flames\Template\TokenParser\ForTokenParser::class,
        Flames\Template\TokenParser\FromTokenParser::class,
        Flames\Template\TokenParser\IfTokenParser::class,
        Flames\Template\TokenParser\ImportTokenParser::class,
        Flames\Template\TokenParser\IncludeTokenParser::class,
        Flames\Template\TokenParser\MacroTokenParser::class,
        Flames\Template\TokenParser\SandboxTokenParser::class,
        Flames\Template\TokenParser\SetTokenParser::class,
        Flames\Template\TokenParser\TokenParserInterface::class,
        Flames\Template\TokenParser\UseTokenParser::class,
        Flames\Template\TokenParser\WithTokenParser::class,
        Flames\Template\Util\DeprecationCollector::class,
        Flames\Template\Util\TemplateDirIterator::class,
        Flames\Template\Client\Polyfill::class,
        Flames\View\Client::class,
    ];

    protected static array $clientMocks = [
        Flames\View\Client::class,
    ];

    public static function isTemplateExtension(): bool
    {
        return (Flames\Environment::get('CLIENT_TEMPLATE_ENABLED') === true);
    }

    public static function injectDefaultFiles(array $defaultFiles): array
    {
        return array_merge($defaultFiles, self::$defaultFiles);
    }

    public static function injectClientMocks(array $clientMocks): array
    {
        return array_merge($clientMocks, self::$clientMocks);
    }
}